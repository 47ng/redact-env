import Benchmark from 'benchmark'

const buildMultiple = (values: string[]): RegExp[] => {
  return values.map(value => new RegExp(value, 'g'))
}
const buildUnified = (values: string[]): RegExp => {
  return new RegExp(values.map(v => `(${v})`).join('|'), 'g')
}

const runMultiple = (input: string, regexp: RegExp[]): string => {
  let out = input
  for (const regex of regexp) {
    out = out.replace(regex, '*')
  }
  return out
}

const runUnified = (input: string, regexp: RegExp): string => {
  return input.replace(regexp, '*')
}

// --

const smallSample = new Benchmark.Suite('small sample')

smallSample
  .add('multiple RegExp', () => {
    const regex = buildMultiple([
      '6bc9142b',
      'cfe374cb',
      '4bbf9725',
      '81ded576'
    ])
    const input =
      'bjfcRzuJTrstuwzvjoj6bc9142bClphiSQkq9lOot28svcfe374cb6BFLerLgOV96SfrLkvvODQ4bbf9725XXUm3LCUH9puK81ded5769CkTSL29QiSQtlqBrtkAoQq1WDSE'
    const received = runMultiple(input, regex)
    const expected =
      'bjfcRzuJTrstuwzvjoj*ClphiSQkq9lOot28sv*6BFLerLgOV96SfrLkvvODQ*XXUm3LCUH9puK*9CkTSL29QiSQtlqBrtkAoQq1WDSE'
    return received === expected
  })
  .add('unified RegExp', () => {
    const regex = buildUnified(['6bc9142b', 'cfe374cb', '4bbf9725', '81ded576'])
    const input =
      'bjfcRzuJTrstuwzvjoj6bc9142bClphiSQkq9lOot28svcfe374cb6BFLerLgOV96SfrLkvvODQ4bbf9725XXUm3LCUH9puK81ded5769CkTSL29QiSQtlqBrtkAoQq1WDSE'
    const received = runUnified(input, regex)
    const expected =
      'bjfcRzuJTrstuwzvjoj*ClphiSQkq9lOot28sv*6BFLerLgOV96SfrLkvvODQ*XXUm3LCUH9puK*9CkTSL29QiSQtlqBrtkAoQq1WDSE'
    return received === expected
  })
  .on('cycle', (event: any) => {
    console.log('Small Sample -  ', event.target.toString())
  })
  .on('complete', () => {
    console.log(
      'Small Sample: Fastest is ' +
        smallSample.filter('fastest').map((x: any) => x.name)
    )
  })
  .run()

// --

const mediumSample = new Benchmark.Suite('medium sample')

mediumSample
  .add('multiple RegExp', () => {
    const regex = buildMultiple([
      '439028ae3a8ff287a647d6b7227baee73701f4200501e5fe469d7a74f133a0c7',
      '6db62332759ecb17705ca17eec5ae4f91a43b049f30fe6a3065ee97f079b2855',
      'e82ade1793de0fd96f0863969c67d982996aad3ce407c9a3f4fe8efb1f81391a',
      'e211f0d3dd34e5bfb51a31af830a05bc991f0f46a0804f1e4a000b4938beaf80'
    ])
    const input =
      'eDRs6BP/Vn6vG9mkLtN7rgg68NfsSA8nNto69moj7IkvA076xRIeOGNbuYh49DRJMgt8IfmPonYC0avggCtsx4439028ae3a8ff287a647d6b7227baee73701f4200501e5fe469d7a74f133a0c7pLtXP5VZJmpdUB1WTxiAhjJ4ptrL4PnYsbozOVMaBDAW9YAeHRBI6TnVhXEoKGVWXtlxTBqvLMkR1+sMMOzv6c6db62332759ecb17705ca17eec5ae4f91a43b049f30fe6a3065ee97f079b2855F3H7Vhi27IQb1XtqLdrrhIGUqZyDDFfAE1eDwB8MYIoNXhM9r9G1rdMSQDChAV/kL/dgMmTlyb9GzbFYV81b8ge82ade1793de0fd96f0863969c67d982996aad3ce407c9a3f4fe8efb1f81391acoqcdxZjztZ+0GAdE9/RDV5aoNWqJqZRlAx1rMkmhOwT/c++rv/WQM7x2fRmdvQxpBArXnlMvq9/zOyGdhRzsce211f0d3dd34e5bfb51a31af830a05bc991f0f46a0804f1e4a000b4938beaf80ueUVYzidy4VNviTE0Fj68epOWDOdR9aRKmIgUYjjRQ43H0azwS215lD5lCo/7H7geASQrqK/FGZFKDqJO4SgD0'
    const received = runMultiple(input, regex)
    const expected =
      'eDRs6BP/Vn6vG9mkLtN7rgg68NfsSA8nNto69moj7IkvA076xRIeOGNbuYh49DRJMgt8IfmPonYC0avggCtsx4*pLtXP5VZJmpdUB1WTxiAhjJ4ptrL4PnYsbozOVMaBDAW9YAeHRBI6TnVhXEoKGVWXtlxTBqvLMkR1+sMMOzv6c*F3H7Vhi27IQb1XtqLdrrhIGUqZyDDFfAE1eDwB8MYIoNXhM9r9G1rdMSQDChAV/kL/dgMmTlyb9GzbFYV81b8g*coqcdxZjztZ+0GAdE9/RDV5aoNWqJqZRlAx1rMkmhOwT/c++rv/WQM7x2fRmdvQxpBArXnlMvq9/zOyGdhRzsc*ueUVYzidy4VNviTE0Fj68epOWDOdR9aRKmIgUYjjRQ43H0azwS215lD5lCo/7H7geASQrqK/FGZFKDqJO4SgD0'
    return received === expected
  })
  .add('unified RegExp', () => {
    const regex = buildUnified([
      '439028ae3a8ff287a647d6b7227baee73701f4200501e5fe469d7a74f133a0c7',
      '6db62332759ecb17705ca17eec5ae4f91a43b049f30fe6a3065ee97f079b2855',
      'e82ade1793de0fd96f0863969c67d982996aad3ce407c9a3f4fe8efb1f81391a',
      'e211f0d3dd34e5bfb51a31af830a05bc991f0f46a0804f1e4a000b4938beaf80'
    ])
    const input =
      'eDRs6BP/Vn6vG9mkLtN7rgg68NfsSA8nNto69moj7IkvA076xRIeOGNbuYh49DRJMgt8IfmPonYC0avggCtsx4439028ae3a8ff287a647d6b7227baee73701f4200501e5fe469d7a74f133a0c7pLtXP5VZJmpdUB1WTxiAhjJ4ptrL4PnYsbozOVMaBDAW9YAeHRBI6TnVhXEoKGVWXtlxTBqvLMkR1+sMMOzv6c6db62332759ecb17705ca17eec5ae4f91a43b049f30fe6a3065ee97f079b2855F3H7Vhi27IQb1XtqLdrrhIGUqZyDDFfAE1eDwB8MYIoNXhM9r9G1rdMSQDChAV/kL/dgMmTlyb9GzbFYV81b8ge82ade1793de0fd96f0863969c67d982996aad3ce407c9a3f4fe8efb1f81391acoqcdxZjztZ+0GAdE9/RDV5aoNWqJqZRlAx1rMkmhOwT/c++rv/WQM7x2fRmdvQxpBArXnlMvq9/zOyGdhRzsce211f0d3dd34e5bfb51a31af830a05bc991f0f46a0804f1e4a000b4938beaf80ueUVYzidy4VNviTE0Fj68epOWDOdR9aRKmIgUYjjRQ43H0azwS215lD5lCo/7H7geASQrqK/FGZFKDqJO4SgD0'
    const received = runUnified(input, regex)
    const expected =
      'eDRs6BP/Vn6vG9mkLtN7rgg68NfsSA8nNto69moj7IkvA076xRIeOGNbuYh49DRJMgt8IfmPonYC0avggCtsx4*pLtXP5VZJmpdUB1WTxiAhjJ4ptrL4PnYsbozOVMaBDAW9YAeHRBI6TnVhXEoKGVWXtlxTBqvLMkR1+sMMOzv6c*F3H7Vhi27IQb1XtqLdrrhIGUqZyDDFfAE1eDwB8MYIoNXhM9r9G1rdMSQDChAV/kL/dgMmTlyb9GzbFYV81b8g*coqcdxZjztZ+0GAdE9/RDV5aoNWqJqZRlAx1rMkmhOwT/c++rv/WQM7x2fRmdvQxpBArXnlMvq9/zOyGdhRzsc*ueUVYzidy4VNviTE0Fj68epOWDOdR9aRKmIgUYjjRQ43H0azwS215lD5lCo/7H7geASQrqK/FGZFKDqJO4SgD0'
    return received === expected
  })
  .on('cycle', (event: any) => {
    console.log('Medium Sample - ', event.target.toString())
  })
  .on('complete', () => {
    console.log(
      'Medium Sample: Fastest is ' +
        mediumSample.filter('fastest').map((x: any) => x.name)
    )
  })
  .run()

// --

const largeSample = new Benchmark.Suite('large sample')

largeSample
  .add('multiple RegExp', () => {
    const regex = buildMultiple([
      '81ac1007d76840539a49aa0bbf92c634ad02c29788f3800beaaae9ba2d7faadf',
      '41442a353ede21d043f8087be01223d6eb047d3d7ec0ea14eb4af99f08474e7f',
      '2c3c0336790e4cccc290fb978e832a54b611b0130a6a7c731b9e77fc86bec9ad',
      '1b3ef38f511428481b7ce87dbd1c85abcfcb456c897c85ac65918240afaabdb1',
      '483564b054cf8ae32c9cb358632901839cbf064fa0df55653f2def1ada48cf8f',
      'b3440b1d653fc1dddb8a95304cf2371efef0db85e3ad9b4328dc261c01b7c097',
      '01bb25f658e2c9edce9a15d1de94b23661423a7bd22c21a397e5f2de0c875be1',
      'ed673f8326dc25ab5e358b5804d70a21dc58de8993799451d4bfa59975a325b6',
      '3b8657463d813691d1264d2dcf06e9912602cb6605a1ed51e15cd2a602f9fb42',
      '468e48bed09a0f7fd40f3ae249d4a0d8056b3404886bfa781a546e9767613714',
      'ca17c89dd982b97ad0182a5adea56aa8b8d96249935649683235c8da9d18388c',
      'aec104d5a5f067cafb0eb385dcafbc6a2d6fc2d83b20bcac3548a6e80dfb33f9',
      '1405e9697ffd4c6becb3f77dfcbb2799953cd40946189a3224940091ae1f671a',
      '1482ab91c5e9c2356a0bb04c62da6c7689a99100a650fe5aedb5725e068eb928',
      '9082a8c9ff27a8716cbb385a51ec8539af0e155da9b5eb876189a3803155f85a',
      'c3949e8e5b855658b462885aaaaded8f9a960d8b96b1fbf60b617d7193b0b144',
      '65b3c5c1c9e5cd4b1f5756e16b8f3a14785805e90ced32a8c8a057dc86974fb3',
      '4626d75686c042b529c6ceafd8d2002341ac051afc311d1088d56c5365597388',
      'bbbfd2e6aac8c3d16e6528e8a32b8c2df31f6a7f27905f469b948044b499028b',
      '77829a149c3c986e3a2130ff32e78745a7ce5b5c7e1753707ed296b7882da8ff',
      '8f13987a15a9c225f878c8d92e2cf3bc24f13c9a776f173e4f1458459c642c5a',
      '039da64307d760b6e2eb6897b64c8d55fa253368d08d4db86e5b86fe354ec350',
      '11b2f96f8f844522d9568db0f344756dd9a351779e44f8cc61b49e7b60a558a9',
      '9330fb78c0ed701c8022dd1985ea00ad96374711eced767e1c528ddc41cca69a',
      '645b9d418d135efe3349599b97113b0b1a8533d72ab32ee421a68b3c9a192afb',
      'fd59184906a4b5391b58148bcab2233934a6a29c9396caaf16bc60aa86f4db22',
      '56375eb91f04ddbb52e03d54deb53848b5e458e529c98bca3cfc8ceacf77dc3a',
      '6796349611efd0cbb63f86e94d241429a16f85af81de6eb0f232aa9ce88966c5',
      '7117bd2c44fb6d85c4b867377cfca1dff95a0d6d22776b9804eba272490b308a',
      '3bd5e5995705e3c56459ac5fb57110ee2bf7714f1e542955c70cbe85f1247142',
      'f34c7034072a689713bb9f4e5a469a1938632381622d771723708ab759944575',
      'b81014df6527861b2921485f31494e3bb6ec50b41a512c445c76d7080f2f8cae',
      '7e4f4ab2984e127e94cb29500dc1cdf5911727dfd07fc5cbccd3b8d12c1b3e7b',
      '0feda83c588e7a66a865e8d8da00bb1fd01c73a7b5b3203944c01f2b0d371336',
      '97e60e771242e7161438936454dcdf5395261af076966e2ca4a772708e612cc2',
      '85b88cbd6e1178683ce8bc3b0b0f2f09183d6ebd331164c02d02f7862477d9e1',
      '584d7305578b605393d3359d08f87f27dd1e996ee67bafa29b958c797c626c9f',
      '4e574e1cd53ddad7f0cab9841d6e1d48ce47a9f09c10f2391943ca0621fe8a0b',
      'f1bb285c3b3ed6e074f7b539ad9198d05636bc11cd80eacb1c9d772318565298',
      'e0604c7b35f171bd9345e7afd364ca02cf18488214938e4db4fd543e3f9793db',
      '8eb77e2fe01598385d61fb358f9aeccde52baa9a4cd7467d07b950a545d5c55e',
      '749de4e790c2a323d8291b608cbf8eae5eafc2e3fed1f3145d40d6665c9e0bf8',
      '56f2d8255280bed6f35d0731f7f17cdbddcb3610038732af10a6df790f3d44e8',
      'a55e671911b6aa224b99923540caa8b1e380f64161ff14e5524004189bfb90e1',
      '39d2037ae83b0711afff36f7b4339f98864c7e50d513405bd13d90a17663cac4',
      'b6e51f8e30583ac9ff3a66b23c94735ada8fe6a468a993ab8713ba5d2b6f6cf2',
      'b072c99a477031707065b5dc810cbe34ee109bb99bb22918ef8ce7fd86b22c28',
      '9de001c5d47ab7ea7f141fe64601e9125636095ac5c97a7aac2ba58ff17d9261',
      'fd37d1f81a5f8d2e13d6979cb99ef6ad5f405feef61bbe34df601150675299b0',
      '74a0d6b1215657b21a1a5ac3f9af70a9277aa3550f884c9bd2d779e6981a943c',
      'a5a9f495165fcd64d1fe157f584e604203074f9067846d7bf0af55203040c511',
      'b0fd9d3006963db85bb5550c7bb66450d40c7666f4f23b2a514557a0b4bcc915',
      '86b4f318c9ede70d432fd056b25ae89f0c5005c2b647b51435e354701b8004ee',
      'e77deca5e007eac8142b218daee0aeefb73b40d88cb4f2d123721c4940e4b47d',
      '967593568761114b0247251355516fb6401e0e2222b7980f924d7ed8b1056270',
      'e8435c88d182afc71fd1490d03ec92e14ffae1233a9158b37e2e8af472cec58a',
      'f83afd7c352f2f097d18721e3a3836acf33179fbc01eb77af60d625c7e6fd591',
      '6206a137cdd482b9a5845fbf52a473f75cbe60235618909078dc41088fc3d87b',
      '86925b716c110fe745b9d532e3c0e5cac7fe818f29c6a0ec741d649951a4df83',
      '7d0d01bdb544c2cfbd3abef1af23ae3df405a00513d0e2ae01f04993f0fab8b7',
      '39b1dd59da3f120307c9a745730e1a8d134cfe6be93f5b36e778c9ce64a44e18',
      '8eceeec4951c5cb1c99d5463f38e06d8cf96b84f6ec48ad8650c5ca6c90630e3',
      '9e916bc9cbf6b140d98fc1dd50100344e6a1d782cd1d662abf4879c8c4aad0b1',
      'a4f7a9f00d216315c02cd317879803190a4f5357712caefb67d447b87aa273e2'
    ])

    const input =
      'Gj4Vmegsq5yUZ+ugTbF0/VGX2LaKVtHHVPn2zFMwoX081ac1007d76840539a49aa0bbf92c634ad02c29788f3800beaaae9ba2d7faadfYFTt7gsFIPGL2ZxRnlummzbN8oooHBpSi0RgdyRux8Q41442a353ede21d043f8087be01223d6eb047d3d7ec0ea14eb4af99f08474e7fVrl1QkUoYCCwShvXo0qVSUkNtNi85Hg0fMHVhPDgPDs2c3c0336790e4cccc290fb978e832a54b611b0130a6a7c731b9e77fc86bec9ad+7w4nzqAV0uFg83k7zfQPHZhIvb2+3p/8mJwqgMiqWI1b3ef38f511428481b7ce87dbd1c85abcfcb456c897c85ac65918240afaabdb1pTp2Ar7ONL9narEOQ9Ujt1zkGoYWux/X1QXHzMp8XTo483564b054cf8ae32c9cb358632901839cbf064fa0df55653f2def1ada48cf8fixHO6DwyN+Rs2uPKAZXjdYW1sRnCMj0M24AXGUadXXAb3440b1d653fc1dddb8a95304cf2371efef0db85e3ad9b4328dc261c01b7c097GEaRobml1zGZDe3m1guDZIHhCbBL9lWfRvHCJuJGbbg01bb25f658e2c9edce9a15d1de94b23661423a7bd22c21a397e5f2de0c875be1soY5Yf7LBcBEkASQFVoyhDRceEYWD7NElIEAbOUKeHMed673f8326dc25ab5e358b5804d70a21dc58de8993799451d4bfa59975a325b6tjDnDsudDon2axSVX8/8XpqxPa7CYyEIxzuHemMlntQ3b8657463d813691d1264d2dcf06e9912602cb6605a1ed51e15cd2a602f9fb42lpnTLS3NBzzvarXSCjVWjtkvgyVJAo1Sj7aBVP3JyhU468e48bed09a0f7fd40f3ae249d4a0d8056b3404886bfa781a546e9767613714qFNXR/FAruDXQMhihGK3ug6Gs08RvnDLZNy6wq8eL0Yca17c89dd982b97ad0182a5adea56aa8b8d96249935649683235c8da9d18388cq3S6Hxa88/bAdnNirkMs2ghhvVEP2cu5oVcZXdKOjv0aec104d5a5f067cafb0eb385dcafbc6a2d6fc2d83b20bcac3548a6e80dfb33f9cJhT84eAO1YiQyOW6ZZ7AgLZlHYlcslk/2VNjCJnjOY1405e9697ffd4c6becb3f77dfcbb2799953cd40946189a3224940091ae1f671aixKeUYfj9jaf0ogy1GYZDffhGqCWHwTR2c5+/H3QjOg1482ab91c5e9c2356a0bb04c62da6c7689a99100a650fe5aedb5725e068eb928nfTmJqhcDzK0aha0chpPo7rX32qdkxMekYtiqdGMVgA9082a8c9ff27a8716cbb385a51ec8539af0e155da9b5eb876189a3803155f85aWBg0ObdDcekBpaG+XwSF7Aj3jy8SDOzIAEBMpKx+Qxkc3949e8e5b855658b462885aaaaded8f9a960d8b96b1fbf60b617d7193b0b144ST5S2GYgIGhtMWBr3jJECaickB2ccq/p/7+tY9dw75865b3c5c1c9e5cd4b1f5756e16b8f3a14785805e90ced32a8c8a057dc86974fb3ZIK9v8Pp8yOQjEwjDPolNHshKR+RVTqsYNCPxAWirZo4626d75686c042b529c6ceafd8d2002341ac051afc311d1088d56c5365597388to9jWj4sV0YYqLKpYL2YFg22Rsfc413MFknIyHsCwwQbbbfd2e6aac8c3d16e6528e8a32b8c2df31f6a7f27905f469b948044b499028bmWFx6ufzB+pnblbDWph1fQ6lMNHjg6KiyFAiEVAhME077829a149c3c986e3a2130ff32e78745a7ce5b5c7e1753707ed296b7882da8ffDlX0OpL3ztQsxbp0coplAeaEJZhacm/NjVBRkekTm788f13987a15a9c225f878c8d92e2cf3bc24f13c9a776f173e4f1458459c642c5aN+T59aQ5fDOYskWf0sjqqa9OpntDLRkcLKNNz8wjE3k039da64307d760b6e2eb6897b64c8d55fa253368d08d4db86e5b86fe354ec350+Lw4oHu0/BbEIaeFKL0QkZs6VVUihp28zWh/msjjkXk11b2f96f8f844522d9568db0f344756dd9a351779e44f8cc61b49e7b60a558a9ISQcmRNZpv0dAsGLg6ohLiz2SIxz/VzRokUcIywHqfo9330fb78c0ed701c8022dd1985ea00ad96374711eced767e1c528ddc41cca69aAcXF2MZgpFi+vBJdCkX7dWyhb2ShFVcdGJA86/McKgE645b9d418d135efe3349599b97113b0b1a8533d72ab32ee421a68b3c9a192afb8Tn2Sv2byJflB9cQy2uqZe6v77ZASKIib7pKd0Msl0kfd59184906a4b5391b58148bcab2233934a6a29c9396caaf16bc60aa86f4db22q2OwPkuoOGDAW557QhkIFeXZqAjdO2T9Sy1c3aYrig456375eb91f04ddbb52e03d54deb53848b5e458e529c98bca3cfc8ceacf77dc3adJYIhGsLNGM/YpV/Ge/Czwwx8AWhXmhjkyL0sjoXHJk6796349611efd0cbb63f86e94d241429a16f85af81de6eb0f232aa9ce88966c55gPyVNIbLC4pLfDT2+prkpC2tlzHS39/01KgaXD54LU7117bd2c44fb6d85c4b867377cfca1dff95a0d6d22776b9804eba272490b308ayOg9TDNcaJWTmqGRIXvNioHgPE/8vrEyfDfFFb/vUZA3bd5e5995705e3c56459ac5fb57110ee2bf7714f1e542955c70cbe85f1247142biI35HYKq06jVMddsdOjMZaQGsHtqwmhfx3OhIDR5OEf34c7034072a689713bb9f4e5a469a1938632381622d771723708ab759944575vP+N02wwrHHPZHvXI768Qrk2iH5nKEBO5z215NQ1avob81014df6527861b2921485f31494e3bb6ec50b41a512c445c76d7080f2f8caex1kzUpXeA8LLbC5OpAe84oNEF1J2uTxiO4lfodOtMNs7e4f4ab2984e127e94cb29500dc1cdf5911727dfd07fc5cbccd3b8d12c1b3e7bfAnD3j0BH9KrYIy8s7MZhv5ONdxqU+qPY1z5RG5AdLU0feda83c588e7a66a865e8d8da00bb1fd01c73a7b5b3203944c01f2b0d371336etZFde9rwSEOQnv7rCEL/G4knA1upy5ivTA6Yv8DOmo97e60e771242e7161438936454dcdf5395261af076966e2ca4a772708e612cc2GeDsXcqLbnZSn5l8OFhJMYabjauDZCSyiv+8jPSJ3Hs85b88cbd6e1178683ce8bc3b0b0f2f09183d6ebd331164c02d02f7862477d9e14XFu0G9Q/lkvTUXj8g0VX0N1dwWxOLU/zaibivVBD6c584d7305578b605393d3359d08f87f27dd1e996ee67bafa29b958c797c626c9fxgRdWYZ4yTJA8CZEDzjhqMNP/rWtr3yokvlw6CPDNAY4e574e1cd53ddad7f0cab9841d6e1d48ce47a9f09c10f2391943ca0621fe8a0bF/ZNYgntgHeNgiuPfdIXXJdjZqaV9GBaKGWpDD+91OYf1bb285c3b3ed6e074f7b539ad9198d05636bc11cd80eacb1c9d77231856529875ZTwRdDrBuN8XLwWqivefG0usloMeTEvsUQF6DYXwEe0604c7b35f171bd9345e7afd364ca02cf18488214938e4db4fd543e3f9793dbpdcoFlBT8wCm+km+MlQ6CiIuDfhxkgHYEd4kFtdt0qw8eb77e2fe01598385d61fb358f9aeccde52baa9a4cd7467d07b950a545d5c55e1EGLZTo+yYVf5BgCspP9HE6BXthYqMJnEUkEDryRdjE749de4e790c2a323d8291b608cbf8eae5eafc2e3fed1f3145d40d6665c9e0bf8onALTNkKFBnztQl4t/a6cnF/MTMWRYbRy/+flnAXUlA56f2d8255280bed6f35d0731f7f17cdbddcb3610038732af10a6df790f3d44e8nUfOfp5B7xbZTX4TWeG3i3WivmzPRuWL13InZILtnrga55e671911b6aa224b99923540caa8b1e380f64161ff14e5524004189bfb90e1jrJIHVrCxLOXcpAS1NB/A3NUfGvOUnap41QGpcc5u7I39d2037ae83b0711afff36f7b4339f98864c7e50d513405bd13d90a17663cac4h9gMq38CgihsDYlm4AuFF7dhaiQyn4Vc/1RirdM0MOMb6e51f8e30583ac9ff3a66b23c94735ada8fe6a468a993ab8713ba5d2b6f6cf2RqRgQ9OWtlnyHKS4z65o3I/8uIAaBUQowJYuc+b3NTUb072c99a477031707065b5dc810cbe34ee109bb99bb22918ef8ce7fd86b22c28Qrf39CCotKPpbVpEKQNKBkElH8cOpO2g9JMzP76E2n49de001c5d47ab7ea7f141fe64601e9125636095ac5c97a7aac2ba58ff17d92615rJUvhXsuCD63ssX/ZUdsZWzIAcIlETbuluxLkNiZwofd37d1f81a5f8d2e13d6979cb99ef6ad5f405feef61bbe34df601150675299b0HjQkFam1bIyf/E6l1Dq0OTorDGKmnDxtaQG6pjRxdyI74a0d6b1215657b21a1a5ac3f9af70a9277aa3550f884c9bd2d779e6981a943crkBlzEZBQG5f4R3qGx0Zi+6b0NkCfQ+NedrF3Klnta4a5a9f495165fcd64d1fe157f584e604203074f9067846d7bf0af55203040c511OBHCDRudIrmQlhpluCuq0UQF6N0VO6eCYAWYTiV0UAwb0fd9d3006963db85bb5550c7bb66450d40c7666f4f23b2a514557a0b4bcc915G8Od8Nam3OpCGd0bsm0WGS35VvYzS3nQGmzQvw4Mmg086b4f318c9ede70d432fd056b25ae89f0c5005c2b647b51435e354701b8004eesazNS1eiOda/aree8/1jOyDzLZZ81oCUIAfaJXa+HEse77deca5e007eac8142b218daee0aeefb73b40d88cb4f2d123721c4940e4b47dzQGXRyxIanri9i1KEBCYrtacgGgzfd3jIXgMdBuKg+M967593568761114b0247251355516fb6401e0e2222b7980f924d7ed8b1056270LdYgJkeg0bp+JxsYlN1wr4U6cvYAlLP9QxU3y2w8eyAe8435c88d182afc71fd1490d03ec92e14ffae1233a9158b37e2e8af472cec58axDdJ+vabxjOdjgNBLnb5flt2jsSd3wQkH+geI3t/6LEf83afd7c352f2f097d18721e3a3836acf33179fbc01eb77af60d625c7e6fd591V0pTwbJkSwHAWuTJvTwd9Kwyx315WvchXmZIBvNeQVc6206a137cdd482b9a5845fbf52a473f75cbe60235618909078dc41088fc3d87btXFsRNWEq0hlIgDS7TcWsWmDf1jiBoFCzeMm2zvW3rM86925b716c110fe745b9d532e3c0e5cac7fe818f29c6a0ec741d649951a4df83Ics2BIAMEbWZRA4I29fFZcCy7JxXiR3XLDqaVQ88QkA7d0d01bdb544c2cfbd3abef1af23ae3df405a00513d0e2ae01f04993f0fab8b7Lp9k6KkXpTyObLSyVzZk5icRQ0JZ874zRnAtZTuVtyM39b1dd59da3f120307c9a745730e1a8d134cfe6be93f5b36e778c9ce64a44e187OBiXjHOtjLWgdtshqQarTcyGscMO7xJqwm7hWvn/2Q8eceeec4951c5cb1c99d5463f38e06d8cf96b84f6ec48ad8650c5ca6c90630e3IF85Kfx6/CdqCDM1FVG5vKLWUI3nhLxUJa3FawT2d+E9e916bc9cbf6b140d98fc1dd50100344e6a1d782cd1d662abf4879c8c4aad0b1xo9J8ps75kFHaQgxvyNzpsFT67zUhJQ9ewgjCg/igAoa4f7a9f00d216315c02cd317879803190a4f5357712caefb67d447b87aa273e2'
    const received = runMultiple(input, regex)
    const expected =
      'Gj4Vmegsq5yUZ+ugTbF0/VGX2LaKVtHHVPn2zFMwoX0*YFTt7gsFIPGL2ZxRnlummzbN8oooHBpSi0RgdyRux8Q*Vrl1QkUoYCCwShvXo0qVSUkNtNi85Hg0fMHVhPDgPDs*+7w4nzqAV0uFg83k7zfQPHZhIvb2+3p/8mJwqgMiqWI*pTp2Ar7ONL9narEOQ9Ujt1zkGoYWux/X1QXHzMp8XTo*ixHO6DwyN+Rs2uPKAZXjdYW1sRnCMj0M24AXGUadXXA*GEaRobml1zGZDe3m1guDZIHhCbBL9lWfRvHCJuJGbbg*soY5Yf7LBcBEkASQFVoyhDRceEYWD7NElIEAbOUKeHM*tjDnDsudDon2axSVX8/8XpqxPa7CYyEIxzuHemMlntQ*lpnTLS3NBzzvarXSCjVWjtkvgyVJAo1Sj7aBVP3JyhU*qFNXR/FAruDXQMhihGK3ug6Gs08RvnDLZNy6wq8eL0Y*q3S6Hxa88/bAdnNirkMs2ghhvVEP2cu5oVcZXdKOjv0*cJhT84eAO1YiQyOW6ZZ7AgLZlHYlcslk/2VNjCJnjOY*ixKeUYfj9jaf0ogy1GYZDffhGqCWHwTR2c5+/H3QjOg*nfTmJqhcDzK0aha0chpPo7rX32qdkxMekYtiqdGMVgA*WBg0ObdDcekBpaG+XwSF7Aj3jy8SDOzIAEBMpKx+Qxk*ST5S2GYgIGhtMWBr3jJECaickB2ccq/p/7+tY9dw758*ZIK9v8Pp8yOQjEwjDPolNHshKR+RVTqsYNCPxAWirZo*to9jWj4sV0YYqLKpYL2YFg22Rsfc413MFknIyHsCwwQ*mWFx6ufzB+pnblbDWph1fQ6lMNHjg6KiyFAiEVAhME0*DlX0OpL3ztQsxbp0coplAeaEJZhacm/NjVBRkekTm78*N+T59aQ5fDOYskWf0sjqqa9OpntDLRkcLKNNz8wjE3k*+Lw4oHu0/BbEIaeFKL0QkZs6VVUihp28zWh/msjjkXk*ISQcmRNZpv0dAsGLg6ohLiz2SIxz/VzRokUcIywHqfo*AcXF2MZgpFi+vBJdCkX7dWyhb2ShFVcdGJA86/McKgE*8Tn2Sv2byJflB9cQy2uqZe6v77ZASKIib7pKd0Msl0k*q2OwPkuoOGDAW557QhkIFeXZqAjdO2T9Sy1c3aYrig4*dJYIhGsLNGM/YpV/Ge/Czwwx8AWhXmhjkyL0sjoXHJk*5gPyVNIbLC4pLfDT2+prkpC2tlzHS39/01KgaXD54LU*yOg9TDNcaJWTmqGRIXvNioHgPE/8vrEyfDfFFb/vUZA*biI35HYKq06jVMddsdOjMZaQGsHtqwmhfx3OhIDR5OE*vP+N02wwrHHPZHvXI768Qrk2iH5nKEBO5z215NQ1avo*x1kzUpXeA8LLbC5OpAe84oNEF1J2uTxiO4lfodOtMNs*fAnD3j0BH9KrYIy8s7MZhv5ONdxqU+qPY1z5RG5AdLU*etZFde9rwSEOQnv7rCEL/G4knA1upy5ivTA6Yv8DOmo*GeDsXcqLbnZSn5l8OFhJMYabjauDZCSyiv+8jPSJ3Hs*4XFu0G9Q/lkvTUXj8g0VX0N1dwWxOLU/zaibivVBD6c*xgRdWYZ4yTJA8CZEDzjhqMNP/rWtr3yokvlw6CPDNAY*F/ZNYgntgHeNgiuPfdIXXJdjZqaV9GBaKGWpDD+91OY*75ZTwRdDrBuN8XLwWqivefG0usloMeTEvsUQF6DYXwE*pdcoFlBT8wCm+km+MlQ6CiIuDfhxkgHYEd4kFtdt0qw*1EGLZTo+yYVf5BgCspP9HE6BXthYqMJnEUkEDryRdjE*onALTNkKFBnztQl4t/a6cnF/MTMWRYbRy/+flnAXUlA*nUfOfp5B7xbZTX4TWeG3i3WivmzPRuWL13InZILtnrg*jrJIHVrCxLOXcpAS1NB/A3NUfGvOUnap41QGpcc5u7I*h9gMq38CgihsDYlm4AuFF7dhaiQyn4Vc/1RirdM0MOM*RqRgQ9OWtlnyHKS4z65o3I/8uIAaBUQowJYuc+b3NTU*Qrf39CCotKPpbVpEKQNKBkElH8cOpO2g9JMzP76E2n4*5rJUvhXsuCD63ssX/ZUdsZWzIAcIlETbuluxLkNiZwo*HjQkFam1bIyf/E6l1Dq0OTorDGKmnDxtaQG6pjRxdyI*rkBlzEZBQG5f4R3qGx0Zi+6b0NkCfQ+NedrF3Klnta4*OBHCDRudIrmQlhpluCuq0UQF6N0VO6eCYAWYTiV0UAw*G8Od8Nam3OpCGd0bsm0WGS35VvYzS3nQGmzQvw4Mmg0*sazNS1eiOda/aree8/1jOyDzLZZ81oCUIAfaJXa+HEs*zQGXRyxIanri9i1KEBCYrtacgGgzfd3jIXgMdBuKg+M*LdYgJkeg0bp+JxsYlN1wr4U6cvYAlLP9QxU3y2w8eyA*xDdJ+vabxjOdjgNBLnb5flt2jsSd3wQkH+geI3t/6LE*V0pTwbJkSwHAWuTJvTwd9Kwyx315WvchXmZIBvNeQVc*tXFsRNWEq0hlIgDS7TcWsWmDf1jiBoFCzeMm2zvW3rM*Ics2BIAMEbWZRA4I29fFZcCy7JxXiR3XLDqaVQ88QkA*Lp9k6KkXpTyObLSyVzZk5icRQ0JZ874zRnAtZTuVtyM*7OBiXjHOtjLWgdtshqQarTcyGscMO7xJqwm7hWvn/2Q*IF85Kfx6/CdqCDM1FVG5vKLWUI3nhLxUJa3FawT2d+E*xo9J8ps75kFHaQgxvyNzpsFT67zUhJQ9ewgjCg/igAo*'
    return received === expected
  })
  .add('unified RegExp', () => {
    const regex = buildUnified([
      '81ac1007d76840539a49aa0bbf92c634ad02c29788f3800beaaae9ba2d7faadf',
      '41442a353ede21d043f8087be01223d6eb047d3d7ec0ea14eb4af99f08474e7f',
      '2c3c0336790e4cccc290fb978e832a54b611b0130a6a7c731b9e77fc86bec9ad',
      '1b3ef38f511428481b7ce87dbd1c85abcfcb456c897c85ac65918240afaabdb1',
      '483564b054cf8ae32c9cb358632901839cbf064fa0df55653f2def1ada48cf8f',
      'b3440b1d653fc1dddb8a95304cf2371efef0db85e3ad9b4328dc261c01b7c097',
      '01bb25f658e2c9edce9a15d1de94b23661423a7bd22c21a397e5f2de0c875be1',
      'ed673f8326dc25ab5e358b5804d70a21dc58de8993799451d4bfa59975a325b6',
      '3b8657463d813691d1264d2dcf06e9912602cb6605a1ed51e15cd2a602f9fb42',
      '468e48bed09a0f7fd40f3ae249d4a0d8056b3404886bfa781a546e9767613714',
      'ca17c89dd982b97ad0182a5adea56aa8b8d96249935649683235c8da9d18388c',
      'aec104d5a5f067cafb0eb385dcafbc6a2d6fc2d83b20bcac3548a6e80dfb33f9',
      '1405e9697ffd4c6becb3f77dfcbb2799953cd40946189a3224940091ae1f671a',
      '1482ab91c5e9c2356a0bb04c62da6c7689a99100a650fe5aedb5725e068eb928',
      '9082a8c9ff27a8716cbb385a51ec8539af0e155da9b5eb876189a3803155f85a',
      'c3949e8e5b855658b462885aaaaded8f9a960d8b96b1fbf60b617d7193b0b144',
      '65b3c5c1c9e5cd4b1f5756e16b8f3a14785805e90ced32a8c8a057dc86974fb3',
      '4626d75686c042b529c6ceafd8d2002341ac051afc311d1088d56c5365597388',
      'bbbfd2e6aac8c3d16e6528e8a32b8c2df31f6a7f27905f469b948044b499028b',
      '77829a149c3c986e3a2130ff32e78745a7ce5b5c7e1753707ed296b7882da8ff',
      '8f13987a15a9c225f878c8d92e2cf3bc24f13c9a776f173e4f1458459c642c5a',
      '039da64307d760b6e2eb6897b64c8d55fa253368d08d4db86e5b86fe354ec350',
      '11b2f96f8f844522d9568db0f344756dd9a351779e44f8cc61b49e7b60a558a9',
      '9330fb78c0ed701c8022dd1985ea00ad96374711eced767e1c528ddc41cca69a',
      '645b9d418d135efe3349599b97113b0b1a8533d72ab32ee421a68b3c9a192afb',
      'fd59184906a4b5391b58148bcab2233934a6a29c9396caaf16bc60aa86f4db22',
      '56375eb91f04ddbb52e03d54deb53848b5e458e529c98bca3cfc8ceacf77dc3a',
      '6796349611efd0cbb63f86e94d241429a16f85af81de6eb0f232aa9ce88966c5',
      '7117bd2c44fb6d85c4b867377cfca1dff95a0d6d22776b9804eba272490b308a',
      '3bd5e5995705e3c56459ac5fb57110ee2bf7714f1e542955c70cbe85f1247142',
      'f34c7034072a689713bb9f4e5a469a1938632381622d771723708ab759944575',
      'b81014df6527861b2921485f31494e3bb6ec50b41a512c445c76d7080f2f8cae',
      '7e4f4ab2984e127e94cb29500dc1cdf5911727dfd07fc5cbccd3b8d12c1b3e7b',
      '0feda83c588e7a66a865e8d8da00bb1fd01c73a7b5b3203944c01f2b0d371336',
      '97e60e771242e7161438936454dcdf5395261af076966e2ca4a772708e612cc2',
      '85b88cbd6e1178683ce8bc3b0b0f2f09183d6ebd331164c02d02f7862477d9e1',
      '584d7305578b605393d3359d08f87f27dd1e996ee67bafa29b958c797c626c9f',
      '4e574e1cd53ddad7f0cab9841d6e1d48ce47a9f09c10f2391943ca0621fe8a0b',
      'f1bb285c3b3ed6e074f7b539ad9198d05636bc11cd80eacb1c9d772318565298',
      'e0604c7b35f171bd9345e7afd364ca02cf18488214938e4db4fd543e3f9793db',
      '8eb77e2fe01598385d61fb358f9aeccde52baa9a4cd7467d07b950a545d5c55e',
      '749de4e790c2a323d8291b608cbf8eae5eafc2e3fed1f3145d40d6665c9e0bf8',
      '56f2d8255280bed6f35d0731f7f17cdbddcb3610038732af10a6df790f3d44e8',
      'a55e671911b6aa224b99923540caa8b1e380f64161ff14e5524004189bfb90e1',
      '39d2037ae83b0711afff36f7b4339f98864c7e50d513405bd13d90a17663cac4',
      'b6e51f8e30583ac9ff3a66b23c94735ada8fe6a468a993ab8713ba5d2b6f6cf2',
      'b072c99a477031707065b5dc810cbe34ee109bb99bb22918ef8ce7fd86b22c28',
      '9de001c5d47ab7ea7f141fe64601e9125636095ac5c97a7aac2ba58ff17d9261',
      'fd37d1f81a5f8d2e13d6979cb99ef6ad5f405feef61bbe34df601150675299b0',
      '74a0d6b1215657b21a1a5ac3f9af70a9277aa3550f884c9bd2d779e6981a943c',
      'a5a9f495165fcd64d1fe157f584e604203074f9067846d7bf0af55203040c511',
      'b0fd9d3006963db85bb5550c7bb66450d40c7666f4f23b2a514557a0b4bcc915',
      '86b4f318c9ede70d432fd056b25ae89f0c5005c2b647b51435e354701b8004ee',
      'e77deca5e007eac8142b218daee0aeefb73b40d88cb4f2d123721c4940e4b47d',
      '967593568761114b0247251355516fb6401e0e2222b7980f924d7ed8b1056270',
      'e8435c88d182afc71fd1490d03ec92e14ffae1233a9158b37e2e8af472cec58a',
      'f83afd7c352f2f097d18721e3a3836acf33179fbc01eb77af60d625c7e6fd591',
      '6206a137cdd482b9a5845fbf52a473f75cbe60235618909078dc41088fc3d87b',
      '86925b716c110fe745b9d532e3c0e5cac7fe818f29c6a0ec741d649951a4df83',
      '7d0d01bdb544c2cfbd3abef1af23ae3df405a00513d0e2ae01f04993f0fab8b7',
      '39b1dd59da3f120307c9a745730e1a8d134cfe6be93f5b36e778c9ce64a44e18',
      '8eceeec4951c5cb1c99d5463f38e06d8cf96b84f6ec48ad8650c5ca6c90630e3',
      '9e916bc9cbf6b140d98fc1dd50100344e6a1d782cd1d662abf4879c8c4aad0b1',
      'a4f7a9f00d216315c02cd317879803190a4f5357712caefb67d447b87aa273e2'
    ])

    const input =
      'Gj4Vmegsq5yUZ+ugTbF0/VGX2LaKVtHHVPn2zFMwoX081ac1007d76840539a49aa0bbf92c634ad02c29788f3800beaaae9ba2d7faadfYFTt7gsFIPGL2ZxRnlummzbN8oooHBpSi0RgdyRux8Q41442a353ede21d043f8087be01223d6eb047d3d7ec0ea14eb4af99f08474e7fVrl1QkUoYCCwShvXo0qVSUkNtNi85Hg0fMHVhPDgPDs2c3c0336790e4cccc290fb978e832a54b611b0130a6a7c731b9e77fc86bec9ad+7w4nzqAV0uFg83k7zfQPHZhIvb2+3p/8mJwqgMiqWI1b3ef38f511428481b7ce87dbd1c85abcfcb456c897c85ac65918240afaabdb1pTp2Ar7ONL9narEOQ9Ujt1zkGoYWux/X1QXHzMp8XTo483564b054cf8ae32c9cb358632901839cbf064fa0df55653f2def1ada48cf8fixHO6DwyN+Rs2uPKAZXjdYW1sRnCMj0M24AXGUadXXAb3440b1d653fc1dddb8a95304cf2371efef0db85e3ad9b4328dc261c01b7c097GEaRobml1zGZDe3m1guDZIHhCbBL9lWfRvHCJuJGbbg01bb25f658e2c9edce9a15d1de94b23661423a7bd22c21a397e5f2de0c875be1soY5Yf7LBcBEkASQFVoyhDRceEYWD7NElIEAbOUKeHMed673f8326dc25ab5e358b5804d70a21dc58de8993799451d4bfa59975a325b6tjDnDsudDon2axSVX8/8XpqxPa7CYyEIxzuHemMlntQ3b8657463d813691d1264d2dcf06e9912602cb6605a1ed51e15cd2a602f9fb42lpnTLS3NBzzvarXSCjVWjtkvgyVJAo1Sj7aBVP3JyhU468e48bed09a0f7fd40f3ae249d4a0d8056b3404886bfa781a546e9767613714qFNXR/FAruDXQMhihGK3ug6Gs08RvnDLZNy6wq8eL0Yca17c89dd982b97ad0182a5adea56aa8b8d96249935649683235c8da9d18388cq3S6Hxa88/bAdnNirkMs2ghhvVEP2cu5oVcZXdKOjv0aec104d5a5f067cafb0eb385dcafbc6a2d6fc2d83b20bcac3548a6e80dfb33f9cJhT84eAO1YiQyOW6ZZ7AgLZlHYlcslk/2VNjCJnjOY1405e9697ffd4c6becb3f77dfcbb2799953cd40946189a3224940091ae1f671aixKeUYfj9jaf0ogy1GYZDffhGqCWHwTR2c5+/H3QjOg1482ab91c5e9c2356a0bb04c62da6c7689a99100a650fe5aedb5725e068eb928nfTmJqhcDzK0aha0chpPo7rX32qdkxMekYtiqdGMVgA9082a8c9ff27a8716cbb385a51ec8539af0e155da9b5eb876189a3803155f85aWBg0ObdDcekBpaG+XwSF7Aj3jy8SDOzIAEBMpKx+Qxkc3949e8e5b855658b462885aaaaded8f9a960d8b96b1fbf60b617d7193b0b144ST5S2GYgIGhtMWBr3jJECaickB2ccq/p/7+tY9dw75865b3c5c1c9e5cd4b1f5756e16b8f3a14785805e90ced32a8c8a057dc86974fb3ZIK9v8Pp8yOQjEwjDPolNHshKR+RVTqsYNCPxAWirZo4626d75686c042b529c6ceafd8d2002341ac051afc311d1088d56c5365597388to9jWj4sV0YYqLKpYL2YFg22Rsfc413MFknIyHsCwwQbbbfd2e6aac8c3d16e6528e8a32b8c2df31f6a7f27905f469b948044b499028bmWFx6ufzB+pnblbDWph1fQ6lMNHjg6KiyFAiEVAhME077829a149c3c986e3a2130ff32e78745a7ce5b5c7e1753707ed296b7882da8ffDlX0OpL3ztQsxbp0coplAeaEJZhacm/NjVBRkekTm788f13987a15a9c225f878c8d92e2cf3bc24f13c9a776f173e4f1458459c642c5aN+T59aQ5fDOYskWf0sjqqa9OpntDLRkcLKNNz8wjE3k039da64307d760b6e2eb6897b64c8d55fa253368d08d4db86e5b86fe354ec350+Lw4oHu0/BbEIaeFKL0QkZs6VVUihp28zWh/msjjkXk11b2f96f8f844522d9568db0f344756dd9a351779e44f8cc61b49e7b60a558a9ISQcmRNZpv0dAsGLg6ohLiz2SIxz/VzRokUcIywHqfo9330fb78c0ed701c8022dd1985ea00ad96374711eced767e1c528ddc41cca69aAcXF2MZgpFi+vBJdCkX7dWyhb2ShFVcdGJA86/McKgE645b9d418d135efe3349599b97113b0b1a8533d72ab32ee421a68b3c9a192afb8Tn2Sv2byJflB9cQy2uqZe6v77ZASKIib7pKd0Msl0kfd59184906a4b5391b58148bcab2233934a6a29c9396caaf16bc60aa86f4db22q2OwPkuoOGDAW557QhkIFeXZqAjdO2T9Sy1c3aYrig456375eb91f04ddbb52e03d54deb53848b5e458e529c98bca3cfc8ceacf77dc3adJYIhGsLNGM/YpV/Ge/Czwwx8AWhXmhjkyL0sjoXHJk6796349611efd0cbb63f86e94d241429a16f85af81de6eb0f232aa9ce88966c55gPyVNIbLC4pLfDT2+prkpC2tlzHS39/01KgaXD54LU7117bd2c44fb6d85c4b867377cfca1dff95a0d6d22776b9804eba272490b308ayOg9TDNcaJWTmqGRIXvNioHgPE/8vrEyfDfFFb/vUZA3bd5e5995705e3c56459ac5fb57110ee2bf7714f1e542955c70cbe85f1247142biI35HYKq06jVMddsdOjMZaQGsHtqwmhfx3OhIDR5OEf34c7034072a689713bb9f4e5a469a1938632381622d771723708ab759944575vP+N02wwrHHPZHvXI768Qrk2iH5nKEBO5z215NQ1avob81014df6527861b2921485f31494e3bb6ec50b41a512c445c76d7080f2f8caex1kzUpXeA8LLbC5OpAe84oNEF1J2uTxiO4lfodOtMNs7e4f4ab2984e127e94cb29500dc1cdf5911727dfd07fc5cbccd3b8d12c1b3e7bfAnD3j0BH9KrYIy8s7MZhv5ONdxqU+qPY1z5RG5AdLU0feda83c588e7a66a865e8d8da00bb1fd01c73a7b5b3203944c01f2b0d371336etZFde9rwSEOQnv7rCEL/G4knA1upy5ivTA6Yv8DOmo97e60e771242e7161438936454dcdf5395261af076966e2ca4a772708e612cc2GeDsXcqLbnZSn5l8OFhJMYabjauDZCSyiv+8jPSJ3Hs85b88cbd6e1178683ce8bc3b0b0f2f09183d6ebd331164c02d02f7862477d9e14XFu0G9Q/lkvTUXj8g0VX0N1dwWxOLU/zaibivVBD6c584d7305578b605393d3359d08f87f27dd1e996ee67bafa29b958c797c626c9fxgRdWYZ4yTJA8CZEDzjhqMNP/rWtr3yokvlw6CPDNAY4e574e1cd53ddad7f0cab9841d6e1d48ce47a9f09c10f2391943ca0621fe8a0bF/ZNYgntgHeNgiuPfdIXXJdjZqaV9GBaKGWpDD+91OYf1bb285c3b3ed6e074f7b539ad9198d05636bc11cd80eacb1c9d77231856529875ZTwRdDrBuN8XLwWqivefG0usloMeTEvsUQF6DYXwEe0604c7b35f171bd9345e7afd364ca02cf18488214938e4db4fd543e3f9793dbpdcoFlBT8wCm+km+MlQ6CiIuDfhxkgHYEd4kFtdt0qw8eb77e2fe01598385d61fb358f9aeccde52baa9a4cd7467d07b950a545d5c55e1EGLZTo+yYVf5BgCspP9HE6BXthYqMJnEUkEDryRdjE749de4e790c2a323d8291b608cbf8eae5eafc2e3fed1f3145d40d6665c9e0bf8onALTNkKFBnztQl4t/a6cnF/MTMWRYbRy/+flnAXUlA56f2d8255280bed6f35d0731f7f17cdbddcb3610038732af10a6df790f3d44e8nUfOfp5B7xbZTX4TWeG3i3WivmzPRuWL13InZILtnrga55e671911b6aa224b99923540caa8b1e380f64161ff14e5524004189bfb90e1jrJIHVrCxLOXcpAS1NB/A3NUfGvOUnap41QGpcc5u7I39d2037ae83b0711afff36f7b4339f98864c7e50d513405bd13d90a17663cac4h9gMq38CgihsDYlm4AuFF7dhaiQyn4Vc/1RirdM0MOMb6e51f8e30583ac9ff3a66b23c94735ada8fe6a468a993ab8713ba5d2b6f6cf2RqRgQ9OWtlnyHKS4z65o3I/8uIAaBUQowJYuc+b3NTUb072c99a477031707065b5dc810cbe34ee109bb99bb22918ef8ce7fd86b22c28Qrf39CCotKPpbVpEKQNKBkElH8cOpO2g9JMzP76E2n49de001c5d47ab7ea7f141fe64601e9125636095ac5c97a7aac2ba58ff17d92615rJUvhXsuCD63ssX/ZUdsZWzIAcIlETbuluxLkNiZwofd37d1f81a5f8d2e13d6979cb99ef6ad5f405feef61bbe34df601150675299b0HjQkFam1bIyf/E6l1Dq0OTorDGKmnDxtaQG6pjRxdyI74a0d6b1215657b21a1a5ac3f9af70a9277aa3550f884c9bd2d779e6981a943crkBlzEZBQG5f4R3qGx0Zi+6b0NkCfQ+NedrF3Klnta4a5a9f495165fcd64d1fe157f584e604203074f9067846d7bf0af55203040c511OBHCDRudIrmQlhpluCuq0UQF6N0VO6eCYAWYTiV0UAwb0fd9d3006963db85bb5550c7bb66450d40c7666f4f23b2a514557a0b4bcc915G8Od8Nam3OpCGd0bsm0WGS35VvYzS3nQGmzQvw4Mmg086b4f318c9ede70d432fd056b25ae89f0c5005c2b647b51435e354701b8004eesazNS1eiOda/aree8/1jOyDzLZZ81oCUIAfaJXa+HEse77deca5e007eac8142b218daee0aeefb73b40d88cb4f2d123721c4940e4b47dzQGXRyxIanri9i1KEBCYrtacgGgzfd3jIXgMdBuKg+M967593568761114b0247251355516fb6401e0e2222b7980f924d7ed8b1056270LdYgJkeg0bp+JxsYlN1wr4U6cvYAlLP9QxU3y2w8eyAe8435c88d182afc71fd1490d03ec92e14ffae1233a9158b37e2e8af472cec58axDdJ+vabxjOdjgNBLnb5flt2jsSd3wQkH+geI3t/6LEf83afd7c352f2f097d18721e3a3836acf33179fbc01eb77af60d625c7e6fd591V0pTwbJkSwHAWuTJvTwd9Kwyx315WvchXmZIBvNeQVc6206a137cdd482b9a5845fbf52a473f75cbe60235618909078dc41088fc3d87btXFsRNWEq0hlIgDS7TcWsWmDf1jiBoFCzeMm2zvW3rM86925b716c110fe745b9d532e3c0e5cac7fe818f29c6a0ec741d649951a4df83Ics2BIAMEbWZRA4I29fFZcCy7JxXiR3XLDqaVQ88QkA7d0d01bdb544c2cfbd3abef1af23ae3df405a00513d0e2ae01f04993f0fab8b7Lp9k6KkXpTyObLSyVzZk5icRQ0JZ874zRnAtZTuVtyM39b1dd59da3f120307c9a745730e1a8d134cfe6be93f5b36e778c9ce64a44e187OBiXjHOtjLWgdtshqQarTcyGscMO7xJqwm7hWvn/2Q8eceeec4951c5cb1c99d5463f38e06d8cf96b84f6ec48ad8650c5ca6c90630e3IF85Kfx6/CdqCDM1FVG5vKLWUI3nhLxUJa3FawT2d+E9e916bc9cbf6b140d98fc1dd50100344e6a1d782cd1d662abf4879c8c4aad0b1xo9J8ps75kFHaQgxvyNzpsFT67zUhJQ9ewgjCg/igAoa4f7a9f00d216315c02cd317879803190a4f5357712caefb67d447b87aa273e2'
    const received = runUnified(input, regex)
    const expected =
      'Gj4Vmegsq5yUZ+ugTbF0/VGX2LaKVtHHVPn2zFMwoX0*YFTt7gsFIPGL2ZxRnlummzbN8oooHBpSi0RgdyRux8Q*Vrl1QkUoYCCwShvXo0qVSUkNtNi85Hg0fMHVhPDgPDs*+7w4nzqAV0uFg83k7zfQPHZhIvb2+3p/8mJwqgMiqWI*pTp2Ar7ONL9narEOQ9Ujt1zkGoYWux/X1QXHzMp8XTo*ixHO6DwyN+Rs2uPKAZXjdYW1sRnCMj0M24AXGUadXXA*GEaRobml1zGZDe3m1guDZIHhCbBL9lWfRvHCJuJGbbg*soY5Yf7LBcBEkASQFVoyhDRceEYWD7NElIEAbOUKeHM*tjDnDsudDon2axSVX8/8XpqxPa7CYyEIxzuHemMlntQ*lpnTLS3NBzzvarXSCjVWjtkvgyVJAo1Sj7aBVP3JyhU*qFNXR/FAruDXQMhihGK3ug6Gs08RvnDLZNy6wq8eL0Y*q3S6Hxa88/bAdnNirkMs2ghhvVEP2cu5oVcZXdKOjv0*cJhT84eAO1YiQyOW6ZZ7AgLZlHYlcslk/2VNjCJnjOY*ixKeUYfj9jaf0ogy1GYZDffhGqCWHwTR2c5+/H3QjOg*nfTmJqhcDzK0aha0chpPo7rX32qdkxMekYtiqdGMVgA*WBg0ObdDcekBpaG+XwSF7Aj3jy8SDOzIAEBMpKx+Qxk*ST5S2GYgIGhtMWBr3jJECaickB2ccq/p/7+tY9dw758*ZIK9v8Pp8yOQjEwjDPolNHshKR+RVTqsYNCPxAWirZo*to9jWj4sV0YYqLKpYL2YFg22Rsfc413MFknIyHsCwwQ*mWFx6ufzB+pnblbDWph1fQ6lMNHjg6KiyFAiEVAhME0*DlX0OpL3ztQsxbp0coplAeaEJZhacm/NjVBRkekTm78*N+T59aQ5fDOYskWf0sjqqa9OpntDLRkcLKNNz8wjE3k*+Lw4oHu0/BbEIaeFKL0QkZs6VVUihp28zWh/msjjkXk*ISQcmRNZpv0dAsGLg6ohLiz2SIxz/VzRokUcIywHqfo*AcXF2MZgpFi+vBJdCkX7dWyhb2ShFVcdGJA86/McKgE*8Tn2Sv2byJflB9cQy2uqZe6v77ZASKIib7pKd0Msl0k*q2OwPkuoOGDAW557QhkIFeXZqAjdO2T9Sy1c3aYrig4*dJYIhGsLNGM/YpV/Ge/Czwwx8AWhXmhjkyL0sjoXHJk*5gPyVNIbLC4pLfDT2+prkpC2tlzHS39/01KgaXD54LU*yOg9TDNcaJWTmqGRIXvNioHgPE/8vrEyfDfFFb/vUZA*biI35HYKq06jVMddsdOjMZaQGsHtqwmhfx3OhIDR5OE*vP+N02wwrHHPZHvXI768Qrk2iH5nKEBO5z215NQ1avo*x1kzUpXeA8LLbC5OpAe84oNEF1J2uTxiO4lfodOtMNs*fAnD3j0BH9KrYIy8s7MZhv5ONdxqU+qPY1z5RG5AdLU*etZFde9rwSEOQnv7rCEL/G4knA1upy5ivTA6Yv8DOmo*GeDsXcqLbnZSn5l8OFhJMYabjauDZCSyiv+8jPSJ3Hs*4XFu0G9Q/lkvTUXj8g0VX0N1dwWxOLU/zaibivVBD6c*xgRdWYZ4yTJA8CZEDzjhqMNP/rWtr3yokvlw6CPDNAY*F/ZNYgntgHeNgiuPfdIXXJdjZqaV9GBaKGWpDD+91OY*75ZTwRdDrBuN8XLwWqivefG0usloMeTEvsUQF6DYXwE*pdcoFlBT8wCm+km+MlQ6CiIuDfhxkgHYEd4kFtdt0qw*1EGLZTo+yYVf5BgCspP9HE6BXthYqMJnEUkEDryRdjE*onALTNkKFBnztQl4t/a6cnF/MTMWRYbRy/+flnAXUlA*nUfOfp5B7xbZTX4TWeG3i3WivmzPRuWL13InZILtnrg*jrJIHVrCxLOXcpAS1NB/A3NUfGvOUnap41QGpcc5u7I*h9gMq38CgihsDYlm4AuFF7dhaiQyn4Vc/1RirdM0MOM*RqRgQ9OWtlnyHKS4z65o3I/8uIAaBUQowJYuc+b3NTU*Qrf39CCotKPpbVpEKQNKBkElH8cOpO2g9JMzP76E2n4*5rJUvhXsuCD63ssX/ZUdsZWzIAcIlETbuluxLkNiZwo*HjQkFam1bIyf/E6l1Dq0OTorDGKmnDxtaQG6pjRxdyI*rkBlzEZBQG5f4R3qGx0Zi+6b0NkCfQ+NedrF3Klnta4*OBHCDRudIrmQlhpluCuq0UQF6N0VO6eCYAWYTiV0UAw*G8Od8Nam3OpCGd0bsm0WGS35VvYzS3nQGmzQvw4Mmg0*sazNS1eiOda/aree8/1jOyDzLZZ81oCUIAfaJXa+HEs*zQGXRyxIanri9i1KEBCYrtacgGgzfd3jIXgMdBuKg+M*LdYgJkeg0bp+JxsYlN1wr4U6cvYAlLP9QxU3y2w8eyA*xDdJ+vabxjOdjgNBLnb5flt2jsSd3wQkH+geI3t/6LE*V0pTwbJkSwHAWuTJvTwd9Kwyx315WvchXmZIBvNeQVc*tXFsRNWEq0hlIgDS7TcWsWmDf1jiBoFCzeMm2zvW3rM*Ics2BIAMEbWZRA4I29fFZcCy7JxXiR3XLDqaVQ88QkA*Lp9k6KkXpTyObLSyVzZk5icRQ0JZ874zRnAtZTuVtyM*7OBiXjHOtjLWgdtshqQarTcyGscMO7xJqwm7hWvn/2Q*IF85Kfx6/CdqCDM1FVG5vKLWUI3nhLxUJa3FawT2d+E*xo9J8ps75kFHaQgxvyNzpsFT67zUhJQ9ewgjCg/igAo*'
    return received === expected
  })
  .on('cycle', (event: any) => {
    console.log('Large Sample -  ', event.target.toString())
  })
  .on('complete', () => {
    console.log(
      'Large Sample: Fastest is ' +
        largeSample.filter('fastest').map((x: any) => x.name)
    )
  })
  .run()
